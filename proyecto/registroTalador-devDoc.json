{
  "version" : 7,
  "kind" : "dev",
  "author" : "Daniel Moyano Fajardo",
  "details" : "Todas las llamadas de las funciones están implementadas sin efectos adversos intencionales",
  "custom:experimental" : "Este es un contrato experimental",
  "methods" :
  {
    "otorgarAcceso(string, uint256)" :
    {
        "details" : "se actualizan también los valores de nombre, puntuacion y tokens tanto locales como de la propia estructura user del msg.sender",
        "params" : 
        {
            "name" : "lleva el nombre del usuario a registrar",
            "puntos" : "llevan los puntos obtenidos por el jugador"
        }
    },
    "comprobarTokens()" :
    {
        "details" : "Devuelve el número de tokens que el usuario aún puede pagar.",
        "return" : "siempre devolverá el nº de tokens -1."
    },
    "NoSuperior30(uint ,uint)" :
    {
        "details" : "error personificado",
        "params" :
        {
            "cantidadMax" : "como la cantidad máxima que se puede sacar",
            "cantidadsacar" : "como la cantidad que se desea sacar"
        }
    },
    "updateInfo(string, uint256)" :
    {
        "details" : "en la función se comprueba si el nombre nuevo es el mismo que ya estaba registrado implica que solo quiere actualizar su puntuación, por lo tanto no se le cobrará",
        "params" :
        {
            "_nombre" : "lleva el nombre al que actualizar o dejar igual",
            "puntos" : "cantidad nueva de puntos "
        }
    },
    "getNombre()" :
    {
        "details" : "Función que permite obtener el nombre del usuario guardado en local",
        "return" : "devuelve la cadena con el nombre local del contrato"
    },
    "getPuntos()" :
    {
        "details" : "Función que permite obtener la puntuación del usuario guardado en local",
        "return" : "devuelve el uint con la nombre puntuación del contrato"
    },
    "consultarSaldo()" :
    {
        "details" : "Función que permite solo al usuario propietario del contrato consultar el saldo almacenado del contrato",
        "return" : "devuelve el uint con la cantidad de créditos almacenados en el contrato"
    },
    "retirarSaldo(uint256)" :
    {
        "details" : "Función que permite sacar los créditos del contrato siempre y cuando no superen el 30% del total ganado solo al propietario del contrato",
        "params" :
        {
            "_cantidad": "parámetro con la cantidad que el propietario quiere sacar"
        }
    },
    "compareStringsbyBytes(string, string)" :
    {
        "details" : "función interna privada del contrato que permite comparar dos cadenas, si son iguales devolverá falso, de lo contrario verdadero",
        "params" :
        {
            "s1" : "parámetro con la 1ª cadena a comparar",
            "s2" : "parámetro con la 2ª cadena a comparar"
        },
        "return" : "siempre devolverá lo opuesto a lo que una función de comparación de cadenas convencional devolvería"
    }
  },
  "title" : "Un simulador del registro de puntuaciones de un juego"
}